"use strict";angular.module("challengeOpenApp",["ngDraggable"]),angular.module("challengeOpenApp").run(function(){function a(a){for(;a!==document;){if(a.classList.contains("models"))return!0;a=a.parentNode}return!1}function b(a){for(;a!==document;){if(a.classList.contains("snapshots"))return!0;a=a.parentNode}return!1}FastClick.attach(document.body);var c=null;document.ontouchstart=function(a){c=a.pageY},document.ontouchend=function(a){c=null},document.ontouchcancel=function(a){c=null},document.ontouchmove=function(d){if(null!==c){if(!a(d.target)&&!b(d.target))return void d.preventDefault();var e=d.pageY-c,f=document.getElementsByClassName("models")[0];b(d.target)&&(abs(e)<3||d.preventDefault()),e>0&&f.scrollTop<=0?d.preventDefault():0>e&&f.scrollTop>=f.scrollHeight-f.clientHeight&&d.preventDefault()}}}),angular.module("challengeOpenApp").controller("MainCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("challengeOpenApp").provider("robot",function(){this.setUrl=function(a){this.url=a},this.$get=function(){var a=window.r=new API.Robot;return a.connect(),a}}),angular.module("challengeOpenApp").controller("ConnectionCtrl",["$scope","robot",function(a,b){a.connection=b.status,b.on("status",function(b){console.log("new status",b),a.$apply(function(){a.connection=b})})}]),angular.module("challengeOpenApp").controller("ModellistCtrl",["$scope","robot",function(a,b){a.models=b.ed.models,b.ed.on("models",function(c){function d(){_.delay(function(){var c=+location.search.substr(1,location.search.length)||640;b.head.getImage(c,function(b){a.$apply(function(){a.camera_src=b,d()})})},200)}a.$apply(function(){a.models=_.mapValues(c,function(a,b){return a.name=_.last(_.words(b,/\w+/g)).replace("_"," "),a})}),a.camera_src=null,d()})}]),angular.module("challengeOpenApp").controller("SnapshotlistCtrl",["robot","$scope",function(a,b){function c(a){var c,d;if("contain"===b.backgroundSize){var e=640/480;a.offsetWidth/a.offsetHeight>e?(d=a.offsetHeight,c=e*a.offsetHeight):(c=a.offsetWidth,d=a.offsetWidth/e)}else d=a.offsetHeight,c=.71*a.offsetWidth;return{height:d,width:c}}b.isUndoing=!1,b.undo=function(){b.isUndoing=!0,a.ed.undo_fit_model(function(){_.delay(function(){b.$apply(function(){b.isUndoing=!1})},1e3)})},b.backgroundSize="contain",b.stretch=function(){"contain"===b.backgroundSize?b.backgroundSize="71% 100%":b.backgroundSize="contain"},b.send_twist=function(b,c,d){a.base.sendTwist(b,c,d)},a.ed.on("update_time",function(a){console.log(a),b.$apply(function(){b.update_time=a})}),b.onDragComplete=function(a,b){},b.onDropComplete=function(b,d){var e=d.element.parent()[0],f=c(e),g=f.width,h=f.height,i=d.x,j=d.y-e.offsetTop,k=i/g,l=j/h;return console.log("x_ratio and y_ratio in bg: "+(100*k).toFixed(1)+"% x "+(100*l).toFixed(1)+"%"),k>1||l>1?void console.log("skipping click"):(console.log("Fit model!",b,k,l),void a.ed.fit_model(b,k,l))}}]),angular.module("challengeOpenApp").controller("TriggerCtrl",["$scope","robot",function(a,b){var c=b.ros.Topic({name:"trigger",messageType:"std_msgs/String"});a.trigger=function(a){c.publish({data:a})},a.creating=!1,a.create_walls=function(){a.creating=!0,b.ed.create_walls(function(){_.delay(function(){a.$apply(function(){a.creating=!1})},1e3)})}}]),angular.module("challengeOpenApp").run(["$templateCache",function(a){a.put("views/main.html",'<div class="container-fluid snapshot-model-editor"> <div class="row top-row"> <div ng-controller="ModellistCtrl" class="col-xs-12 models" ng-style="{ \'background-image\': \'url(\'+camera_src+\')\', \'background-size\': backgroundSize}" ng-drop="true" ng-drop-success="onDropComplete($data,$event)"> <button ng-repeat="(id, model) in models" type="button" class="btn btn-lg" ng-class="{ \'btn-primary\': selected == id, \'btn-default\': selected != id }" ng-drag="true" ng-center-anchor="true" ng-drag-data="id" ng-drag-success="onDragComplete($data,$event)"> <div class="model-name">{{model.name}}</div> <img class="img-responsive" src="{{model.src}}"> </button> </div> </div> <div class="row bottom-row"> <div class="col-xs-1 snapshot-controls"> <button type="submit" class="btn" ng-click="make_snapshot_or_play()" ng-class="{ active: isSnapshotting, \'btn-primary\': selected == \'current\', \'btn-success\': selected != \'current\' }"> <span ng-if="selected == \'current\'" class="glyphicon glyphicon-camera"></span> <span ng-if="selected != \'current\'" class="glyphicon glyphicon-play-circle"></span> </button> </div> <div class="col-xs-9 snapshots"> <button ng-repeat="(id, snapshot) in snapshots" ng-if="id != \'current\'" type="button" class="btn btn-lg" ng-class="{ \'btn-primary\': selected == id, \'btn-default\': selected != id }" ng-click="select(id)"> <img class="img-responsive" src="{{snapshot.src}}"> <div class="snapshot-delete" ng-click="delete(id, $event)"><span class="glyphicon glyphicon-remove"></span></div> </button> </div> <div class="col-xs-2 logo"> <button id="robot-base-left" ng-click="send_twist(0,0,0.3)" class="robot-base">Left</button> <button id="robot-base-right" ng-click="send_twist(0,0,-0.3)" class="robot-base">Right</button> <!-- We are going to draw a canvas here --> <!--       <canvas id="teleop-canvas">\n        Canvas not supported unfortunately.\n      </canvas> --> </div> </div> </div>')}]);